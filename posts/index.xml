<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ricardo Carvalho</title>
    <link>http://rabc.github.io/posts/</link>
    <description>Recent content in Posts on Ricardo Carvalho</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Jul 2019 13:07:34 +0200</lastBuildDate>
    
	<atom:link href="http://rabc.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Public-Facing Entities and Sharing the Protocol</title>
      <link>http://rabc.github.io/posts/public-facing-entities-and-sharing/</link>
      <pubDate>Sun, 07 Jul 2019 13:07:34 +0200</pubDate>
      
      <guid>http://rabc.github.io/posts/public-facing-entities-and-sharing/</guid>
      <description>All the examples here are mode for Vapor 3, but could be applied anywhere else.
Everytime you are creating an API you are creating a new contract that says: I promise to give all this agreed set of informations when requested, nothing less. It is important to adhere to this because you will give predictability to whoever is consuming the API, don&amp;rsquo;t making them assuming that something could not be present, therefore breaking its application.</description>
    </item>
    
    <item>
      <title>Making a Promise to the Future</title>
      <link>http://rabc.github.io/posts/futures-and-promises/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rabc.github.io/posts/futures-and-promises/</guid>
      <description>SwiftNIO is pretty much a low-level framework, where you need to understand concepts from the event-driven and network worlds, but ultimately what it is exposed in final frameworks like Vapor are its Futures and Promises events.
John Sundell has a good definition about it:
 A Promise is something you make to someone else. In the Future you may choose to honor (resolve) that promise, or reject it.  Go read his post about it for a great introduction of the concept.</description>
    </item>
    
    <item>
      <title>Why this blog</title>
      <link>http://rabc.github.io/posts/why-this-blog/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rabc.github.io/posts/why-this-blog/</guid>
      <description>Why this blog Humans are lazy by nature (there is a chance that someone is reading this post right now to avoid picking-up the next Jira ticket, for example). It is too easy to lock ourselves inside our knowledge silos and keep doing the same thing. Maybe you need a routine and predictability, maybe you think you do well this one thing.
Whatever the reason, it is fine. Because at the same time, humans are curious by nature too.</description>
    </item>
    
  </channel>
</rss>